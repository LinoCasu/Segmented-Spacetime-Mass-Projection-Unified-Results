from __future__ import annotations

import logging
from pathlib import Path
from typing import Any

import pandas as pd

from scripts.tools.logging_utils import get_logger


class GaiaLoader:
    """Load GAIA parquet outputs generated by the smoke fetchers."""

    def __init__(self, run_id: str, logger: logging.Logger | None = None) -> None:
        self.run_id = run_id
        self.log = logger or get_logger("GAIA_LOADER", run_id)

    def load_parquet(self, path: str | Path) -> pd.DataFrame:
        path = Path(path)
        if not path.exists():
            raise FileNotFoundError(f"GAIA parquet missing: {path}")
        df = pd.read_parquet(path)
        if len(df.columns) == 0:
            raise ValueError(f"GAIA parquet empty: {path}")
        self.log.info("Loaded GAIA parquet: %s rows=%d", path, len(df))
        return df

    def load_for_run(self) -> pd.DataFrame:
        base = Path(f"data/raw/gaia/{self.run_id}/gaia_quick.parquet")
        return self.load_parquet(base)
